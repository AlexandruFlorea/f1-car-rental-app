Formula one car rental app

Short description: a platform through which you can rent a Formula one car for a few laps on a circuit of your choice.

Key features - core:
1. Car selection - done
2. Track selection - done
3. User registration - done
4. Shopping cart / checkout - done
5. Active rentals / Rental history - done
6. Weather information - must show weather based on track location - url constructor method/search parameters - done


Possible features:
1. Weather information - must show weather based on track location - url constructor method/search parameters
2. Internationalization and localization
3. Detect user location and suggest the closest track
4. Global Search function - done
5. Booking confirmation (email + pdf)
6. Web scrapping from the F1 site (the latest news)
7. About, contact - done
8. Social networks authentication - done
9. API (based on GraphQL)
10. User stories (blog section)
11.


Feature description
Car - available fields
1. Name (team)
2. Power unit make
3. Races won
4. Driver
5. Handling


Track - available fields
1. Name
2. Location
3. Length (km)
4. Average G per lap
5.

********** User - available fields **********
1. first name
2. last name
3. email address
4. profile

Reservation - available fields
1. date
2. number of laps
3. Cost


********** Project status ***********
1. .env - done
2. Passwordless authentication - done
3. Authenticate with email instead of username - done
        Change username with email for authentication - Make sure there are no other apps installed. Migrate Users app first, but do not define anything in your AuthUser (just pass).
        After generating the migration, define your Custom AuthUser model, with email instead of username.
4. Send confirmation email - done
5. Registration - done
6. Login - done
7. Profile - done
8. Password reset - done
9. Static & media files - done
10. Booking process - done
11. Display messages (Django built-in) - done
12. Categories and sorting - done
13. Weather information - done
14. Add, delete, update tracks and cars - by staff only - done
15. Global Search function - done
16. Custom commands - done
17. REST API - done
18. Social authentication (Google, Facebook, GitHub) - done
19. Admin page customization - done
20. Unit tests - done
21. Deploy on AWS - done
22. Web scraping - done
23.


********** Questions ***********
1.



